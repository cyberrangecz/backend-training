********************************************************************************
GroupsRef
********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/groups    
Hibernate: 
    /* select
        iDMGroupRef 
    from
        IDMGroupRef iDMGroupRef */ 
        select
            idmgroupre0_.id as id1_5_,
            idmgroupre0_.group_id as group_id2_5_ 
        from
            idm_group_ref idmgroupre0_ limit ?

********************************************************************************
Roles
********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/roles      
Hibernate: 
    /* select
        role 
    from
        Role role */ 
        select
            role0_.id as id1_12_,
            role0_.role_type as role_typ2_12_ 
        from
            role role0_ limit ?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/roles/1    
Hibernate: 
    select
        role0_.id as id1_12_0_,
        role0_.role_type as role_typ2_12_0_ 
    from
        role role0_ 
    where
        role0_.id=?

********************************************************************************
Training definitions
********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-definitions?page=1&size=20
Hibernate: 
    /* select
        trainingDefinition 
    from
        TrainingDefinition trainingDefinition */ select
            trainingde0_.id as id1_15_,
            trainingde0_.description as descript2_15_,
            trainingde0_.outcomes as outcomes3_15_,
            trainingde0_.prerequisities as prerequi4_15_,
            trainingde0_.sand_box_definition_ref_id as sand_box9_15_,
            trainingde0_.show_stepper_bar as show_ste5_15_,
            trainingde0_.starting_level as starting6_15_,
            trainingde0_.state as state7_15_,
            trainingde0_.title as title8_15_ 
        from
            training_definition trainingde0_ limit ? offset ?
Hibernate: 
    /* select
        count(trainingDefinition) 
    from
        TrainingDefinition trainingDefinition */ 
        select
            count(trainingde0_.id) as col_0_0_ 
        from
            training_definition trainingde0_

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-definitions/1
Hibernate: 
    select
        abstractle0_.id as id1_0_0_,
        abstractle0_.max_score as max_scor2_0_0_,
        abstractle0_.next_level as next_lev3_0_0_,
        abstractle0_.post_hook_id as post_hoo5_0_0_,
        abstractle0_.pre_hook_id as pre_hook6_0_0_,
        abstractle0_.title as title4_0_0_,
        abstractle0_1_.assessment_type as assessme1_1_0_,
        abstractle0_1_.instructions as instruct2_1_0_,
        abstractle0_1_.questions as question3_1_0_,
        abstractle0_2_.attachments as attachme1_3_0_,
        abstractle0_2_.content as content2_3_0_,
        abstractle0_2_.estimated_duration as estimate3_3_0_,
        abstractle0_2_.flag as flag4_3_0_,
        abstractle0_2_.incorrect_flag_limit as incorrec5_3_0_,
        abstractle0_2_.solution as solution6_3_0_,
        abstractle0_2_.solution_penalized as solution7_3_0_,
        abstractle0_3_.content as content1_7_0_,
        case 
            when abstractle0_1_.id is not null then 1 
            when abstractle0_2_.id is not null then 2 
            when abstractle0_3_.id is not null then 3 
            when abstractle0_.id is not null then 0 
        end as clazz_0_ 
    from
        abstract_level abstractle0_ 
    left outer join
        assessment_level abstractle0_1_ 
            on abstractle0_.id=abstractle0_1_.id 
    left outer join
        game_level abstractle0_2_ 
            on abstractle0_.id=abstractle0_2_.id 
    left outer join
        info_level abstractle0_3_ 
            on abstractle0_.id=abstractle0_3_.id 
    where
        abstractle0_.id=?
Hibernate: 
    select
        abstractle0_.id as id1_0_0_,
        abstractle0_.max_score as max_scor2_0_0_,
        abstractle0_.next_level as next_lev3_0_0_,
        abstractle0_.post_hook_id as post_hoo5_0_0_,
        abstractle0_.pre_hook_id as pre_hook6_0_0_,
        abstractle0_.title as title4_0_0_,
        abstractle0_1_.assessment_type as assessme1_1_0_,
        abstractle0_1_.instructions as instruct2_1_0_,
        abstractle0_1_.questions as question3_1_0_,
        abstractle0_2_.attachments as attachme1_3_0_,
        abstractle0_2_.content as content2_3_0_,
        abstractle0_2_.estimated_duration as estimate3_3_0_,
        abstractle0_2_.flag as flag4_3_0_,
        abstractle0_2_.incorrect_flag_limit as incorrec5_3_0_,
        abstractle0_2_.solution as solution6_3_0_,
        abstractle0_2_.solution_penalized as solution7_3_0_,
        abstractle0_3_.content as content1_7_0_,
        case 
            when abstractle0_1_.id is not null then 1 
            when abstractle0_2_.id is not null then 2 
            when abstractle0_3_.id is not null then 3 
            when abstractle0_.id is not null then 0 
        end as clazz_0_ 
    from
        abstract_level abstractle0_ 
    left outer join
        assessment_level abstractle0_1_ 
            on abstractle0_.id=abstractle0_1_.id 
    left outer join
        game_level abstractle0_2_ 
            on abstractle0_.id=abstractle0_2_.id 
    left outer join
        info_level abstractle0_3_ 
            on abstractle0_.id=abstractle0_3_.id 
    where
        abstractle0_.id=?
Hibernate: 
    select
        abstractle0_.id as id1_0_0_,
        abstractle0_.max_score as max_scor2_0_0_,
        abstractle0_.next_level as next_lev3_0_0_,
        abstractle0_.post_hook_id as post_hoo5_0_0_,
        abstractle0_.pre_hook_id as pre_hook6_0_0_,
        abstractle0_.title as title4_0_0_,
        abstractle0_1_.assessment_type as assessme1_1_0_,
        abstractle0_1_.instructions as instruct2_1_0_,
        abstractle0_1_.questions as question3_1_0_,
        abstractle0_2_.attachments as attachme1_3_0_,
        abstractle0_2_.content as content2_3_0_,
        abstractle0_2_.estimated_duration as estimate3_3_0_,
        abstractle0_2_.flag as flag4_3_0_,
        abstractle0_2_.incorrect_flag_limit as incorrec5_3_0_,
        abstractle0_2_.solution as solution6_3_0_,
        abstractle0_2_.solution_penalized as solution7_3_0_,
        abstractle0_3_.content as content1_7_0_,
        case 
            when abstractle0_1_.id is not null then 1 
            when abstractle0_2_.id is not null then 2 
            when abstractle0_3_.id is not null then 3 
            when abstractle0_.id is not null then 0 
        end as clazz_0_ 
    from
        abstract_level abstractle0_ 
    left outer join
        assessment_level abstractle0_1_ 
            on abstractle0_.id=abstractle0_1_.id 
    left outer join
        game_level abstractle0_2_ 
            on abstractle0_.id=abstractle0_2_.id 
    left outer join
        info_level abstractle0_3_ 
            on abstractle0_.id=abstractle0_3_.id 
    where
        abstractle0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-definitions/levels/1
Hibernate: 
    select
        abstractle0_.id as id1_0_0_,
        abstractle0_.max_score as max_scor2_0_0_,
        abstractle0_.next_level as next_lev3_0_0_,
        abstractle0_.post_hook_id as post_hoo5_0_0_,
        abstractle0_.pre_hook_id as pre_hook6_0_0_,
        abstractle0_.title as title4_0_0_,
        abstractle0_1_.assessment_type as assessme1_1_0_,
        abstractle0_1_.instructions as instruct2_1_0_,
        abstractle0_1_.questions as question3_1_0_,
        abstractle0_2_.attachments as attachme1_3_0_,
        abstractle0_2_.content as content2_3_0_,
        abstractle0_2_.estimated_duration as estimate3_3_0_,
        abstractle0_2_.flag as flag4_3_0_,
        abstractle0_2_.incorrect_flag_limit as incorrec5_3_0_,
        abstractle0_2_.solution as solution6_3_0_,
        abstractle0_2_.solution_penalized as solution7_3_0_,
        abstractle0_3_.content as content1_7_0_,
        case 
            when abstractle0_1_.id is not null then 1 
            when abstractle0_2_.id is not null then 2 
            when abstractle0_3_.id is not null then 3 
            when abstractle0_.id is not null then 0 
        end as clazz_0_ 
    from
        abstract_level abstractle0_ 
    left outer join
        assessment_level abstractle0_1_ 
            on abstractle0_.id=abstractle0_1_.id 
    left outer join
        game_level abstractle0_2_ 
            on abstractle0_.id=abstractle0_2_.id 
    left outer join
        info_level abstractle0_3_ 
            on abstractle0_.id=abstractle0_3_.id 
    where
        abstractle0_.id=?
Hibernate: 
    select
        hints0_.game_level_id as game_lev5_4_0_,
        hints0_.id as id1_4_0_,
        hints0_.id as id1_4_1_,
        hints0_.content as content2_4_1_,
        hints0_.game_level_id as game_lev5_4_1_,
        hints0_.hint_penalty as hint_pen3_4_1_,
        hints0_.title as title4_4_1_ 
    from
        hint hints0_ 
    where
        hints0_.game_level_id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-definitions/sandbox-definitions/1?page=1&size=20
Hibernate: 
    /* SELECT
        td 
    FROM
        TrainingDefinition td 
    INNER JOIN
        td.sandBoxDefinitionRef sbd
    WHERE
        sbd.sandboxDefinitionRefId = :sandboxDefId */ 
        select
            trainingde0_.id as id1_15_,
            trainingde0_.description as descript2_15_,
            trainingde0_.outcomes as outcomes3_15_,
            trainingde0_.prerequisities as prerequi4_15_,
            trainingde0_.sand_box_definition_ref_id as sand_box9_15_,
            trainingde0_.show_stepper_bar as show_ste5_15_,
            trainingde0_.starting_level as starting6_15_,
            trainingde0_.state as state7_15_,
            trainingde0_.title as title8_15_ 
        from
            training_definition trainingde0_ 
        inner join
            sandbox_definition_ref sandboxdef1_ 
                on trainingde0_.sand_box_definition_ref_id=sandboxdef1_.id 
        where
            sandboxdef1_.sandbox_definition_ref=? limit ? offset ?
Hibernate: 
    /* select
        count(td) 
    FROM
        TrainingDefinition td 
    INNER JOIN
        td.sandBoxDefinitionRef sbd
    WHERE
        sbd.sandboxDefinitionRefId = :sandboxDefId */ select
            count(trainingde0_.id) as col_0_0_ 
        from
            training_definition trainingde0_ 
        inner join
            sandbox_definition_ref sandboxdef1_ 
                on trainingde0_.sand_box_definition_ref_id=sandboxdef1_.id 
        where
            sandboxdef1_.sandbox_definition_ref=?

********************************************************************************
Training instances
********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-instances?paged=false&sort.sorted=true&sort.unsorted=false&unpaged=true
Hibernate: 
    /* select
        trainingInstance 
    from
        TrainingInstance trainingInstance */ 
        select
            trainingin0_.id as id1_17_,
            trainingin0_.end_time as end_time2_17_,
            trainingin0_.password as password3_17_,
            trainingin0_.pool_size as pool_siz4_17_,
            trainingin0_.start_time as start_ti5_17_,
            trainingin0_.title as title6_17_,
            trainingin0_.training_definition_id as training7_17_ 
        from
            training_instance trainingin0_ limit ?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-instances/1
Hibernate: 
    select
        trainingin0_.id as id1_17_0_,
        trainingin0_.end_time as end_time2_17_0_,
        trainingin0_.password as password3_17_0_,
        trainingin0_.pool_size as pool_siz4_17_0_,
        trainingin0_.start_time as start_ti5_17_0_,
        trainingin0_.title as title6_17_0_,
        trainingin0_.training_definition_id as training7_17_0_ 
    from
        training_instance trainingin0_ 
    where
        trainingin0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-instances/1/training-runs
Hibernate: 
    /* select
        generatedAlias0 
    from
        TrainingRun as generatedAlias0 
    where
        generatedAlias0.trainingInstance.id=:param0 */ 
        select
            trainingru0_.id as id1_20_,
            trainingru0_.current_level_id as current_8_20_,
            trainingru0_.end_time as end_time2_20_,
            trainingru0_.event_log_reference as event_lo3_20_,
            trainingru0_.incorrect_flag_count as incorrec4_20_,
            trainingru0_.participant_ref_id as particip9_20_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_,
            trainingru0_.solution_taken as solution5_20_,
            trainingru0_.start_time as start_ti6_20_,
            trainingru0_.state as state7_20_,
            trainingru0_.training_instance_id as trainin11_20_ 
        from
            training_run trainingru0_ 
        where
            trainingru0_.training_instance_id=? limit ?

********************************************************************************
Training runs
********************************************************************************
Hibernate: 
    /* select
        trainingRun 
    from
        TrainingRun trainingRun */ select
            trainingru0_.id as id1_20_,
            trainingru0_.current_level_id as current_8_20_,
            trainingru0_.end_time as end_time2_20_,
            trainingru0_.event_log_reference as event_lo3_20_,
            trainingru0_.incorrect_flag_count as incorrec4_20_,
            trainingru0_.participant_ref_id as particip9_20_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_,
            trainingru0_.solution_taken as solution5_20_,
            trainingru0_.start_time as start_ti6_20_,
            trainingru0_.state as state7_20_,
            trainingru0_.training_instance_id as trainin11_20_ 
        from
            training_run trainingru0_ limit ? offset ?
Hibernate: 
    /* select
        count(trainingRun) 
    from
        TrainingRun trainingRun */ select
            count(trainingru0_.id) as col_0_0_ 
        from
            training_run trainingru0_

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/1
Hibernate: 
    select
        trainingru0_.id as id1_20_0_,
        trainingru0_.current_level_id as current_8_20_0_,
        trainingru0_.end_time as end_time2_20_0_,
        trainingru0_.event_log_reference as event_lo3_20_0_,
        trainingru0_.incorrect_flag_count as incorrec4_20_0_,
        trainingru0_.participant_ref_id as particip9_20_0_,
        trainingru0_.sandbox_instance_ref_id as sandbox10_20_0_,
        trainingru0_.solution_taken as solution5_20_0_,
        trainingru0_.start_time as start_ti6_20_0_,
        trainingru0_.state as state7_20_0_,
        trainingru0_.training_instance_id as trainin11_20_0_,
        participan1_.id as id1_8_1_,
        participan1_.participant_ref_login as particip2_8_1_ 
    from
        training_run trainingru0_ 
    inner join
        participant_ref participan1_ 
            on trainingru0_.participant_ref_id=participan1_.id 
    where
        trainingru0_.id=?
Hibernate: 
    select
        sandboxins0_.id as id1_14_0_,
        sandboxins0_.sandbox_instance_ref as sandbox_2_14_0_,
        sandboxins0_.training_instance_id as training3_14_0_,
        trainingin1_.id as id1_17_1_,
        trainingin1_.end_time as end_time2_17_1_,
        trainingin1_.password as password3_17_1_,
        trainingin1_.pool_size as pool_siz4_17_1_,
        trainingin1_.start_time as start_ti5_17_1_,
        trainingin1_.title as title6_17_1_,
        trainingin1_.training_definition_id as training7_17_1_ 
    from
        sandbox_instance_ref sandboxins0_ 
    inner join
        training_instance trainingin1_ 
            on sandboxins0_.training_instance_id=trainingin1_.id 
    where
        sandboxins0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/1/hints/0
Hibernate: 
    /* SELECT
        tr 
    FROM
        TrainingRun tr 
    JOIN
        FETCH tr.currentLevel 
    WHERE
        tr.id= :trainingRunId */ select
            trainingru0_.id as id1_20_0_,
            abstractle1_.id as id1_0_1_,
            trainingru0_.current_level_id as current_8_20_0_,
            trainingru0_.end_time as end_time2_20_0_,
            trainingru0_.event_log_reference as event_lo3_20_0_,
            trainingru0_.incorrect_flag_count as incorrec4_20_0_,
            trainingru0_.participant_ref_id as particip9_20_0_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_0_,
            trainingru0_.solution_taken as solution5_20_0_,
            trainingru0_.start_time as start_ti6_20_0_,
            trainingru0_.state as state7_20_0_,
            trainingru0_.training_instance_id as trainin11_20_0_,
            abstractle1_.max_score as max_scor2_0_1_,
            abstractle1_.next_level as next_lev3_0_1_,
            abstractle1_.post_hook_id as post_hoo5_0_1_,
            abstractle1_.pre_hook_id as pre_hook6_0_1_,
            abstractle1_.title as title4_0_1_,
            abstractle1_1_.assessment_type as assessme1_1_1_,
            abstractle1_1_.instructions as instruct2_1_1_,
            abstractle1_1_.questions as question3_1_1_,
            abstractle1_2_.attachments as attachme1_3_1_,
            abstractle1_2_.content as content2_3_1_,
            abstractle1_2_.estimated_duration as estimate3_3_1_,
            abstractle1_2_.flag as flag4_3_1_,
            abstractle1_2_.incorrect_flag_limit as incorrec5_3_1_,
            abstractle1_2_.solution as solution6_3_1_,
            abstractle1_2_.solution_penalized as solution7_3_1_,
            abstractle1_3_.content as content1_7_1_,
            case 
                when abstractle1_1_.id is not null then 1 
                when abstractle1_2_.id is not null then 2 
                when abstractle1_3_.id is not null then 3 
                when abstractle1_.id is not null then 0 
            end as clazz_1_ 
        from
            training_run trainingru0_ 
        inner join
            abstract_level abstractle1_ 
                on trainingru0_.current_level_id=abstractle1_.id 
        left outer join
            assessment_level abstractle1_1_ 
                on abstractle1_.id=abstractle1_1_.id 
        left outer join
            game_level abstractle1_2_ 
                on abstractle1_.id=abstractle1_2_.id 
        left outer join
            info_level abstractle1_3_ 
                on abstractle1_.id=abstractle1_3_.id 
        where
            trainingru0_.id=?
Hibernate: 
    select
        participan0_.id as id1_8_0_,
        participan0_.participant_ref_login as particip2_8_0_ 
    from
        participant_ref participan0_ 
    where
        participan0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/1/is-correct-flag?flag=aaa
Hibernate: 
    /* SELECT
        tr 
    FROM
        TrainingRun tr 
    JOIN
        FETCH tr.currentLevel 
    WHERE
        tr.id= :trainingRunId */ select
            trainingru0_.id as id1_20_0_,
            abstractle1_.id as id1_0_1_,
            trainingru0_.current_level_id as current_8_20_0_,
            trainingru0_.end_time as end_time2_20_0_,
            trainingru0_.event_log_reference as event_lo3_20_0_,
            trainingru0_.incorrect_flag_count as incorrec4_20_0_,
            trainingru0_.participant_ref_id as particip9_20_0_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_0_,
            trainingru0_.solution_taken as solution5_20_0_,
            trainingru0_.start_time as start_ti6_20_0_,
            trainingru0_.state as state7_20_0_,
            trainingru0_.training_instance_id as trainin11_20_0_,
            abstractle1_.max_score as max_scor2_0_1_,
            abstractle1_.next_level as next_lev3_0_1_,
            abstractle1_.post_hook_id as post_hoo5_0_1_,
            abstractle1_.pre_hook_id as pre_hook6_0_1_,
            abstractle1_.title as title4_0_1_,
            abstractle1_1_.assessment_type as assessme1_1_1_,
            abstractle1_1_.instructions as instruct2_1_1_,
            abstractle1_1_.questions as question3_1_1_,
            abstractle1_2_.attachments as attachme1_3_1_,
            abstractle1_2_.content as content2_3_1_,
            abstractle1_2_.estimated_duration as estimate3_3_1_,
            abstractle1_2_.flag as flag4_3_1_,
            abstractle1_2_.incorrect_flag_limit as incorrec5_3_1_,
            abstractle1_2_.solution as solution6_3_1_,
            abstractle1_2_.solution_penalized as solution7_3_1_,
            abstractle1_3_.content as content1_7_1_,
            case 
                when abstractle1_1_.id is not null then 1 
                when abstractle1_2_.id is not null then 2 
                when abstractle1_3_.id is not null then 3 
                when abstractle1_.id is not null then 0 
            end as clazz_1_ 
        from
            training_run trainingru0_ 
        inner join
            abstract_level abstractle1_ 
                on trainingru0_.current_level_id=abstractle1_.id 
        left outer join
            assessment_level abstractle1_1_ 
                on abstractle1_.id=abstractle1_1_.id 
        left outer join
            game_level abstractle1_2_ 
                on abstractle1_.id=abstractle1_2_.id 
        left outer join
            info_level abstractle1_3_ 
                on abstractle1_.id=abstractle1_3_.id 
        where
            trainingru0_.id=?
Hibernate: 
    select
        participan0_.id as id1_8_0_,
        participan0_.participant_ref_login as particip2_8_0_ 
    from
        participant_ref participan0_ 
    where
        participan0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/1/next-levels
Hibernate: 
    /* SELECT
        tr 
    FROM
        TrainingRun tr 
    JOIN
        FETCH tr.currentLevel 
    WHERE
        tr.id= :trainingRunId */ select
            trainingru0_.id as id1_20_0_,
            abstractle1_.id as id1_0_1_,
            trainingru0_.current_level_id as current_8_20_0_,
            trainingru0_.end_time as end_time2_20_0_,
            trainingru0_.event_log_reference as event_lo3_20_0_,
            trainingru0_.incorrect_flag_count as incorrec4_20_0_,
            trainingru0_.participant_ref_id as particip9_20_0_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_0_,
            trainingru0_.solution_taken as solution5_20_0_,
            trainingru0_.start_time as start_ti6_20_0_,
            trainingru0_.state as state7_20_0_,
            trainingru0_.training_instance_id as trainin11_20_0_,
            abstractle1_.max_score as max_scor2_0_1_,
            abstractle1_.next_level as next_lev3_0_1_,
            abstractle1_.post_hook_id as post_hoo5_0_1_,
            abstractle1_.pre_hook_id as pre_hook6_0_1_,
            abstractle1_.title as title4_0_1_,
            abstractle1_1_.assessment_type as assessme1_1_1_,
            abstractle1_1_.instructions as instruct2_1_1_,
            abstractle1_1_.questions as question3_1_1_,
            abstractle1_2_.attachments as attachme1_3_1_,
            abstractle1_2_.content as content2_3_1_,
            abstractle1_2_.estimated_duration as estimate3_3_1_,
            abstractle1_2_.flag as flag4_3_1_,
            abstractle1_2_.incorrect_flag_limit as incorrec5_3_1_,
            abstractle1_2_.solution as solution6_3_1_,
            abstractle1_2_.solution_penalized as solution7_3_1_,
            abstractle1_3_.content as content1_7_1_,
            case 
                when abstractle1_1_.id is not null then 1 
                when abstractle1_2_.id is not null then 2 
                when abstractle1_3_.id is not null then 3 
                when abstractle1_.id is not null then 0 
            end as clazz_1_ 
        from
            training_run trainingru0_ 
        inner join
            abstract_level abstractle1_ 
                on trainingru0_.current_level_id=abstractle1_.id 
        left outer join
            assessment_level abstractle1_1_ 
                on abstractle1_.id=abstractle1_1_.id 
        left outer join
            game_level abstractle1_2_ 
                on abstractle1_.id=abstractle1_2_.id 
        left outer join
            info_level abstractle1_3_ 
                on abstractle1_.id=abstractle1_3_.id 
        where
            trainingru0_.id=?
Hibernate: 
    select
        participan0_.id as id1_8_0_,
        participan0_.participant_ref_login as particip2_8_0_ 
    from
        participant_ref participan0_ 
    where
        participan0_.id=?
Hibernate: 
    select
        abstractle0_.id as id1_0_0_,
        abstractle0_.max_score as max_scor2_0_0_,
        abstractle0_.next_level as next_lev3_0_0_,
        abstractle0_.post_hook_id as post_hoo5_0_0_,
        abstractle0_.pre_hook_id as pre_hook6_0_0_,
        abstractle0_.title as title4_0_0_,
        abstractle0_1_.assessment_type as assessme1_1_0_,
        abstractle0_1_.instructions as instruct2_1_0_,
        abstractle0_1_.questions as question3_1_0_,
        abstractle0_2_.attachments as attachme1_3_0_,
        abstractle0_2_.content as content2_3_0_,
        abstractle0_2_.estimated_duration as estimate3_3_0_,
        abstractle0_2_.flag as flag4_3_0_,
        abstractle0_2_.incorrect_flag_limit as incorrec5_3_0_,
        abstractle0_2_.solution as solution6_3_0_,
        abstractle0_2_.solution_penalized as solution7_3_0_,
        abstractle0_3_.content as content1_7_0_,
        case 
            when abstractle0_1_.id is not null then 1 
            when abstractle0_2_.id is not null then 2 
            when abstractle0_3_.id is not null then 3 
            when abstractle0_.id is not null then 0 
        end as clazz_0_ 
    from
        abstract_level abstractle0_ 
    left outer join
        assessment_level abstractle0_1_ 
            on abstractle0_.id=abstractle0_1_.id 
    left outer join
        game_level abstractle0_2_ 
            on abstractle0_.id=abstractle0_2_.id 
    left outer join
        info_level abstractle0_3_ 
            on abstractle0_.id=abstractle0_3_.id 
    where
        abstractle0_.id=?
Hibernate: 
    select
        trainingin0_.id as id1_17_0_,
        trainingin0_.end_time as end_time2_17_0_,
        trainingin0_.password as password3_17_0_,
        trainingin0_.pool_size as pool_siz4_17_0_,
        trainingin0_.start_time as start_ti5_17_0_,
        trainingin0_.title as title6_17_0_,
        trainingin0_.training_definition_id as training7_17_0_ 
    from
        training_instance trainingin0_ 
    where
        trainingin0_.id=?


********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/1/resume
Hibernate: 
    /* SELECT
        tr 
    FROM
        TrainingRun tr 
    JOIN
        FETCH tr.currentLevel 
    WHERE
        tr.id= :trainingRunId */ select
            trainingru0_.id as id1_20_0_,
            abstractle1_.id as id1_0_1_,
            trainingru0_.current_level_id as current_8_20_0_,
            trainingru0_.end_time as end_time2_20_0_,
            trainingru0_.event_log_reference as event_lo3_20_0_,
            trainingru0_.incorrect_flag_count as incorrec4_20_0_,
            trainingru0_.participant_ref_id as particip9_20_0_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_0_,
            trainingru0_.solution_taken as solution5_20_0_,
            trainingru0_.start_time as start_ti6_20_0_,
            trainingru0_.state as state7_20_0_,
            trainingru0_.training_instance_id as trainin11_20_0_,
            abstractle1_.max_score as max_scor2_0_1_,
            abstractle1_.next_level as next_lev3_0_1_,
            abstractle1_.post_hook_id as post_hoo5_0_1_,
            abstractle1_.pre_hook_id as pre_hook6_0_1_,
            abstractle1_.title as title4_0_1_,
            abstractle1_1_.assessment_type as assessme1_1_1_,
            abstractle1_1_.instructions as instruct2_1_1_,
            abstractle1_1_.questions as question3_1_1_,
            abstractle1_2_.attachments as attachme1_3_1_,
            abstractle1_2_.content as content2_3_1_,
            abstractle1_2_.estimated_duration as estimate3_3_1_,
            abstractle1_2_.flag as flag4_3_1_,
            abstractle1_2_.incorrect_flag_limit as incorrec5_3_1_,
            abstractle1_2_.solution as solution6_3_1_,
            abstractle1_2_.solution_penalized as solution7_3_1_,
            abstractle1_3_.content as content1_7_1_,
            case 
                when abstractle1_1_.id is not null then 1 
                when abstractle1_2_.id is not null then 2 
                when abstractle1_3_.id is not null then 3 
                when abstractle1_.id is not null then 0 
            end as clazz_1_ 
        from
            training_run trainingru0_ 
        inner join
            abstract_level abstractle1_ 
                on trainingru0_.current_level_id=abstractle1_.id 
        left outer join
            assessment_level abstractle1_1_ 
                on abstractle1_.id=abstractle1_1_.id 
        left outer join
            game_level abstractle1_2_ 
                on abstractle1_.id=abstractle1_2_.id 
        left outer join
            info_level abstractle1_3_ 
                on abstractle1_.id=abstractle1_3_.id 
        where
            trainingru0_.id=?
Hibernate: 
    select
        participan0_.id as id1_8_0_,
        participan0_.participant_ref_login as particip2_8_0_ 
    from
        participant_ref participan0_ 
    where
        participan0_.id=?
Hibernate: 
    select
        trainingin0_.id as id1_17_0_,
        trainingin0_.end_time as end_time2_17_0_,
        trainingin0_.password as password3_17_0_,
        trainingin0_.pool_size as pool_siz4_17_0_,
        trainingin0_.start_time as start_ti5_17_0_,
        trainingin0_.title as title6_17_0_,
        trainingin0_.training_definition_id as training7_17_0_ 
    from
        training_instance trainingin0_ 
    where
        trainingin0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/1/solutions
Hibernate: 
    /* SELECT
        tr 
    FROM
        TrainingRun tr 
    JOIN
        FETCH tr.currentLevel 
    WHERE
        tr.id= :trainingRunId */ select
            trainingru0_.id as id1_20_0_,
            abstractle1_.id as id1_0_1_,
            trainingru0_.current_level_id as current_8_20_0_,
            trainingru0_.end_time as end_time2_20_0_,
            trainingru0_.event_log_reference as event_lo3_20_0_,
            trainingru0_.incorrect_flag_count as incorrec4_20_0_,
            trainingru0_.participant_ref_id as particip9_20_0_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_0_,
            trainingru0_.solution_taken as solution5_20_0_,
            trainingru0_.start_time as start_ti6_20_0_,
            trainingru0_.state as state7_20_0_,
            trainingru0_.training_instance_id as trainin11_20_0_,
            abstractle1_.max_score as max_scor2_0_1_,
            abstractle1_.next_level as next_lev3_0_1_,
            abstractle1_.post_hook_id as post_hoo5_0_1_,
            abstractle1_.pre_hook_id as pre_hook6_0_1_,
            abstractle1_.title as title4_0_1_,
            abstractle1_1_.assessment_type as assessme1_1_1_,
            abstractle1_1_.instructions as instruct2_1_1_,
            abstractle1_1_.questions as question3_1_1_,
            abstractle1_2_.attachments as attachme1_3_1_,
            abstractle1_2_.content as content2_3_1_,
            abstractle1_2_.estimated_duration as estimate3_3_1_,
            abstractle1_2_.flag as flag4_3_1_,
            abstractle1_2_.incorrect_flag_limit as incorrec5_3_1_,
            abstractle1_2_.solution as solution6_3_1_,
            abstractle1_2_.solution_penalized as solution7_3_1_,
            abstractle1_3_.content as content1_7_1_,
            case 
                when abstractle1_1_.id is not null then 1 
                when abstractle1_2_.id is not null then 2 
                when abstractle1_3_.id is not null then 3 
                when abstractle1_.id is not null then 0 
            end as clazz_1_ 
        from
            training_run trainingru0_ 
        inner join
            abstract_level abstractle1_ 
                on trainingru0_.current_level_id=abstractle1_.id 
        left outer join
            assessment_level abstractle1_1_ 
                on abstractle1_.id=abstractle1_1_.id 
        left outer join
            game_level abstractle1_2_ 
                on abstractle1_.id=abstractle1_2_.id 
        left outer join
            info_level abstractle1_3_ 
                on abstractle1_.id=abstractle1_3_.id 
        where
            trainingru0_.id=?
Hibernate: 
    select
        participan0_.id as id1_8_0_,
        participan0_.participant_ref_login as particip2_8_0_ 
    from
        participant_ref participan0_ 
    where
        participan0_.id=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/accessed?page=1&size=20
Hibernate: 
    /* SELECT
        DISTINCT tr 
    FROM
        TrainingRun tr 
    INNER JOIN
        tr.participantRef pr 
    WHERE
        pr.participantRefLogin = :participantRef */ select
            distinct trainingru0_.id as id1_20_,
            trainingru0_.current_level_id as current_8_20_,
            trainingru0_.end_time as end_time2_20_,
            trainingru0_.event_log_reference as event_lo3_20_,
            trainingru0_.incorrect_flag_count as incorrec4_20_,
            trainingru0_.participant_ref_id as particip9_20_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_,
            trainingru0_.solution_taken as solution5_20_,
            trainingru0_.start_time as start_ti6_20_,
            trainingru0_.state as state7_20_,
            trainingru0_.training_instance_id as trainin11_20_ 
        from
            training_run trainingru0_ 
        inner join
            participant_ref participan1_ 
                on trainingru0_.participant_ref_id=participan1_.id 
        where
            participan1_.participant_ref_login=? limit ? offset ?
Hibernate: 
    /* select
        count(DISTINCT tr) 
    FROM
        TrainingRun tr 
    INNER JOIN
        tr.participantRef pr 
    WHERE
        pr.participantRefLogin = :participantRef */ select
            count(distinct trainingru0_.id) as col_0_0_ 
        from
            training_run trainingru0_ 
        inner join
            participant_ref participan1_ 
                on trainingru0_.participant_ref_id=participan1_.id 
        where
            participan1_.participant_ref_login=?

********************************************************************************
Request: http://localhost:8080/kypo2-training/api/v1/training-runs/accessed?page=1&size=20
Hibernate: 
    /* SELECT
        DISTINCT tr 
    FROM
        TrainingRun tr 
    INNER JOIN
        tr.participantRef pr 
    WHERE
        pr.participantRefLogin = :participantRef */ select
            distinct trainingru0_.id as id1_20_,
            trainingru0_.current_level_id as current_8_20_,
            trainingru0_.end_time as end_time2_20_,
            trainingru0_.event_log_reference as event_lo3_20_,
            trainingru0_.incorrect_flag_count as incorrec4_20_,
            trainingru0_.participant_ref_id as particip9_20_,
            trainingru0_.sandbox_instance_ref_id as sandbox10_20_,
            trainingru0_.solution_taken as solution5_20_,
            trainingru0_.start_time as start_ti6_20_,
            trainingru0_.state as state7_20_,
            trainingru0_.training_instance_id as trainin11_20_ 
        from
            training_run trainingru0_ 
        inner join
            participant_ref participan1_ 
                on trainingru0_.participant_ref_id=participan1_.id 
        where
            participan1_.participant_ref_login=? limit ? offset ?
Hibernate: 
    /* select
        count(DISTINCT tr) 
    FROM
        TrainingRun tr 
    INNER JOIN
        tr.participantRef pr 
    WHERE
        pr.participantRefLogin = :participantRef */ select
            count(distinct trainingru0_.id) as col_0_0_ 
        from
            training_run trainingru0_ 
        inner join
            participant_ref participan1_ 
                on trainingru0_.participant_ref_id=participan1_.id 
        where
            participan1_.participant_ref_login=?
