
- hosts: all
  vars:
    project_dir: /vagrant
    repos_dir: /vagrant/gitlab
    elastic_data: data
    api_root: http://localhost:9200
    db_model_config_file: '{{ project_dir }}/ansible/properties/kypo2-config.properties'
    db_model:
        name: training
        user: postgres
        pass: postgres
        host: 'jdbc:postgresql://localhost:5432/training'
  environment:
    JAVA_HOME: "/usr/lib/jvm/java-8-oracle"
    JRE_HOME: "/usr/lib/jvm/java-8-oracle/jre"
  become: yes

  pre_tasks:vagran
    - name: Create elasticsearch user
      user:
        name: elasticsearch
        groups:
          - sudo
          - admin
        state: present
        system: yes
        createhome: no

    - import_tasks: java.yml
    - import_tasks: maven.yml


  roles:
    - role: jradtilbrook.elasticsearch
      vars:
        elasticsearch_jdk_version: oracle-java8-installer
        elasticsearch_config_settings:
          network:
            host: 0.0.0.0

    - role: jradtilbrook.kibana
      vars:
        kibana_config_settings:
          server:
            host: 0.0.0.0
            port: 5601
          elasticsearch:
              preserveHost: true
              requestTimeout: 300000
              url: '{{ api_root }}'

    - role: postgresql
      vars:
          postgresql_role_name: '{{ db_model.user }}'
          postgresql_role_password: '{{ db_model.pass }}'
          postgresql_database_name: '{{ db_model.name }}'
          postgresql_privileges_type: database
          postgresql_privileges_privs: ALL
          postgresql_pghba_rules:
              - type: local
                method: trust
              - type: host
                address: 127.0.0.1/32
                method: trust

  tasks:
    - name: 
      lineinfile:
          dest: '{{ db_model_config_file }}'
          regexp: '^{{ item.key }}[ \t]+=[ \t]+.*$'
          line: '{{ item.key }} = {{ item.value }}'
      with_items:
          - key: jdbc.url
            value: '{{ db_model.host }}'
          - key: jdbc.username
            value: '{{ db_model.user }}'
          - key: jdbc.password
            value: '{{ db_model.pass }}'

    - name: Compile Repos
      command: mvn clean install {% if item.config is defined %}-Dpath.to.config.file={{ item.config }}{% endif %}
      args:
        chdir: '{{ item.repo }}'
      with_items:
        - repo: '{{ repos_dir }}/kypo2-user-and-group'
          config: '{{ db_model_config_file }}'
        - repo: '{{ repos_dir }}/kypo2-security-commons'
          config: '{{ db_model_config_file }}'

    - name: Migrate Repos
      command: mvn flyway:migrate -Djdbc.url={{ db_model.host }} -Djdbc.username={{ db_model.user }} -Djdbc.password={{ db_model.pass }}
      args:
        chdir: '{{ item }}'
      with_items:
        - '{{ project_dir }}/kypo2-persistence-training'

    - name: Run Tomcat server on port 8080
      shell: mvn spring-boot:run -Dpath.to.config.file={{ db_model_config_file }}  </dev/null >/dev/null 2>&1 & sleep 1
      args:
          chdir: '{{ project_dir }}/kypo2-rest-training'

    - name:
      file:
          dest: data
          state: directory
          recurse: yes
          owner: elasticsearch

    - name: Kibana settings
      command: curl -X PUT -d @{{ elastic_data }}/template.json {{ api_root }}/_template/template_all

    #- name: Load events
    #  shell: ./curl.sh
    #  args:
    #    chdir: "data/events"

    # - name: Kibana data - event 1
    #   command: curl -X POST -d @{{ elastic_data }}event1.json {{ api_root }}kypo2-cz.muni.csirt.kypo.events.game.wrongflagsubmitted/cz.muni.csirt.kypo.events.game.WrongFlagSubmitted
    #
    # - name: Kibana data - event 2
    #   command: curl -X POST -d @{{ elastic_data }}event2.json {{ api_root }}kypo2-cz.muni.csirt.kypo.events.game.gamestarted/cz.muni.csirt.kypo.events.game.GameStarted
    #
    # - name: Kibana data - event 3
    #   command: curl -X POST -d @{{ elastic_data }}event3.json {{ api_root }}kypo2-cz.muni.csirt.kypo.events.game.gamefinished/cz.muni.csirt.kypo.events.game.GameFinished
